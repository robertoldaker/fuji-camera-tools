<div class="monthSelectorContainer">
@if (_loadingImages || _monthsByYear==null) {
    <div style="text-align: center; margin-top:2rem">
        <Spinner Title="Loading images ..." Color="SpinnerColor.Secondary" />
    </div>
} else if ( _monthsByYear.Count == 0 ) {
    <div>No images found</div>
} else {
    foreach (var item in _monthsByYear)
    {
        <div class="yearSelector">@item.Year</div>
            @foreach (var month in item.Months)
            {
                <div class="monthSelector @getSelectedClass(item.Year,month)" @onclick="(e=>onMonthSelectedAsync(item.Year,month))">@_monthsDict[month]</div>
            }
    }
}
</div>

@code {

    private Dictionary<int, string> _monthsDict = new Dictionary<int, string>() {
        {1, "Jan"},
        {2, "Feb"},
        {3, "Mar"},
        {4, "Apr"},
        {5, "May"},
        {6, "Jun"},
        {7, "Jul"},
        {8, "Aug"},
        {9, "Sep"},
        {10, "Oct"},
        {11, "Nov"},
        {12, "Dec"}
    };
    List<MonthsByYear>? _monthsByYear = null;
    bool _loadingImages = false;

    [Inject]
    ImageLibraryService? imageLibraryService { get; set; }

    protected override void OnInitialized()    {
        if (imageLibraryService != null) {
            if ( imageLibraryService.LoadingImages ) {
                _loadingImages = true;
            }
            imageLibraryService.LoadImagesStarted += (e,li) => {
                _loadingImages = li;
                StateHasChanged();
            };
            if ( imageLibraryService.MonthsByYear!=null) {
                _monthsByYear = imageLibraryService.MonthsByYear;
                StateHasChanged();
            } 
            imageLibraryService.MonthsByYearLoaded+=(e,monthsByYear) => {
                _monthsByYear = monthsByYear;
                StateHasChanged();
            };   
            imageLibraryService.ImagesByDateLoaded+=(e,imagesByDate) => {
                StateHasChanged();
            };
        }
    }


    private async void onMonthSelectedAsync(int year, int month) {
        if (imageLibraryService != null) {
            await imageLibraryService.SelectMonthAsync(year,month);
        }
    }

    private string getSelectedClass(int year, int month) {
        if ( imageLibraryService!=null ) {
            return (year == imageLibraryService.Year && month == imageLibraryService.Month) ? "selected" : "";
        } else {
            return "";
        }
    }
 
}
